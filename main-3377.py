import classes

def guidelines():
    '''
    Υλοποιημένες κλάσεις: SakClass, Logic, Player, Human, Computer, GameStats, Game, InputOutput
    
    Οι κλάσεις Human και Computer είναι παράγωγες της κλάσης Player.
    
    Οι συναρτήσεις __init__() και __repr__() της Human επεκτείνουν αυτές της Player. 
    H συνάρτηση __init() της Computer επεκτείνει αυτή της Player.
    
    Η εφαρμογή αφού φορτώσει τις λέξεις από το αρχείο τις αποθηκεύει σε ένα λεξικό - dictionary καθεμία ως key με 
    τους πόντους της ως value. Η δομή υπάρχει εντός της κλάσης Logic.

    Οι αλγόριθμοί που υλοποιήθηκαν για να πάιξει ο Η/Υ είναι οι MIN-MAX-SMART.

    Πληροφορίες σχετικά με τον κώδικα: 
        Η κλάση SakClass υλοποιεί το σακουλάκι με τα γράμματα.
            Στατικά πεδία: 
                lets: λεξικό με πλήθος και αξίες γραμμάτων 
            Μέθοδοι:
                randomizeSak(): αρχικοποιεί το σακουλάκι με βάση το λεξικό
                getLetters(n): για integer n >= 0 επιστρέφει μια λίστα με n αριθμό γραμμάτων από το σακουλάκι. 
                    Αν το σακουλάκι έχει μικρότερο αριθμό γραμμάτων από n τότε επιστρέφει όσα περιέχει. 
                    Σε περίπτωση που το σακουλάκι είναι κενό, επιστρέφει μια κενή λίστα.
                putBackLetters(letters): επιστρέφει τα γράμματα της λίστας letters στο σακουλάκι
                lettersInSak(): επιστρέφει το πλήθος των γραμμάτων στο σακουλάκι 
                updateLetters(letters, word): ανάλογα με την λέξη ενημερώνει τα γράμματα του παίκτη 
                    (αν είναι 'p' τα αντικαθιστά όλα με νέα, αν είναι άλλη λέξη αντικαθιστά μόνο 
                    τα γράμματα που χρησιμοποιήθηκαν στην λέξη με νέα).

        Η κλάση Logic περιέχει όλες τις μεθόδους που σχετίζονται με την λογική. 
            Στατικά πεδία: 
                lets: λεξικό με πλήθος και αξίες γραμμάτων
                words: λίστα με όλες τις λέξεις του αρχείου 'greek7.txt'
                word_values: λεξικό με λέξεις και τις αντίστοιχες αξίες τους
            Μέθοδοι:
                letterValues(letters): για μία λίστα letters με γράμματα, επιστρέφει μία λίστα 
                    με τις αντίστοιχες αξίες τους
                wordValueDict(word): για ένα string λέξης word, επιστρέφει την αξία της
                wordValue(word): για ένα string λέξης word, επιστρέφει την αξία της λαμβάνοντας υπόψιν 
                    τις λέξεις 'p' και 'q'
                lettersInWord(letters, word): για μία λίστα letters με γράμματα και ένα string λέξης word, 
                    ελέγχει αν τα γράμματα της letters περιέχονται στη λέξη word
                wordInDict(word): για ένα string λέξης word, επιστρέφει True αν η λέξη υπάρχει στο λεξικό, διαφορετικά False
        
        Η κλάση Player είναι η υπερκλάση των δύο ειδών κλάσεων παικτών, Human και Computer
            Πεδία: 
                name: string ονόματος παίκτη
            Μέθοδοι: 
                display(score, letters, letter_count): εμφανίζει στο τερματικό το interface του κάθε παίκτη με στοιχεία
                    όπως τα γράμματα που έχει στη διάθεσή του, τα στατιστικά του και τις αξίες των γραμμάτων
        
        Κλάση Human:
            Πεδία:
                score: integer του συνολικού σκορ ενός χρήστη (όχι μόνο του εκάστοτε παιχνιδιού)
                wins: integer με τις συνολικές νίκες ενός χρήστη
            Μέθοδοι:
                play(letters): μέσω της λίστας letters με τα γράμματα που έχει στη διάθεσή του ο χρήστης, ελέγχει τη λέξη 
                    που αυτός εισάγει και την επιστρέφει μόνο αν είναι 'p', 'q', ή εφόσον περιέχει γράμματα της λίστας
                    και θεωρείται έγκυρη λέξη με βάση τις λέξεις του λεξικού.
        
        Κλάση Computer:
            Πεδία: 
                mode: string με το είδος του αλγορίθμου που θα χρησιμοποιήσει ο υπολογιστής με πιθανές τιμές "MIN", "MAX", "SMART"
            Μέθοδοι:
                play(letters): μέσω της λίστας letters με τα γράμματα που έχει στη διάθεσή του ο υπολογιστής, και ανάλογα με
                    τον αλγόριθμο που αυτός χρησιμοποιεί, υπολογίζει και επιστρέφει τη λέξη που θα παιχτεί μέσω permutations.
                    Αν δεν βρεθεί καμία κατάλληλη λέξη, επιστρέφει 'p'.

        Η κλάση GameStats αποθηκεύει τα στοιχεία ενός παιχνιδιού:
            Πεδία:
                player_name: string με το όνομα του χρήστη
                player_score: integer για το σκορ του χρήστη σε ένα παιχνίδι
                player_pc: integer για το σκορ του υπολογιστή σε ένα παιχνίδι
                total_moves: integer για τις συνολικές κινήσεις
                match_result: string για το απότελεσμα του παιχνιδιού το οποίο λαμβάνει τις τιμές "Ισοπαλία", "Νίκη PC", 
                    "Νίκη" + όνομα χρήστη
        
        Η κλάση Game διαχειρίζεται όλες τις ενέργειες που πραγματοποιούνται κατά την εκτέλεση του προγράμματος συμπεριλαμβανομένου του παιχνδιού:
            Πεδία: 
                ph: Human για τον χρήστη
                pc: Computer για τον υπολογιστή
                sak: SakClass για το σακουλάκι με τα γράμματα
                players: λίστα με όλα τα αντικείμενα Human που είναι αποθηκευμένα στο αρχείο 'names.pkl'. 
                    Η λίστα φορτώνεται κατά την εκκίνηση του παιχνιδιού
                stats: λίστα με όλα τα αντικείμενα GameStats που είναι αποθηκευμένα στο αρχείο 'stats.pkl'. 
                    Η λίστα φορτώνεται κατά την εκκίνηση του παιχνιδιού
            Μέθοδοι:
                setup(): φορτώνει τις λίστες players και stats με τα δεδομένα των αρχείων. Επιπλέον λαμβάνει το όνομα του χρήστη
                    και ελέγχει αν αποτελεί στοιχείο της λίστας players. Αν ναι, τότε αποδίδει στο πεδίο ph την
                    τιμή του αντίστοιχου στοιχείου της λίστας, διαφορετικά εισάγει ένα νέο στοιχείο Human στην λίστα.
                play(): αφού καλέσει την μέθοδο setup(), εκτυπώνει το μενού με τις επιλογές στον χρήστη. 
                    Αν η απάντησή του είναι 1, τότε τυπώνει το όνομα, το συνολικό σκορ και τις συνολικές νίκες του χρήστη.
                    Επιπλέον τυπώνει κάθε στοιχείο της λίστας stats με όνομα που ταιριάζει με εκείνο του χρήστη.
                    Αν η απάντησή του είναι 2, τότε τυπώνει το μενού με τις επιλογές των ρυθμίσεων.
                        Για 1 διαλέγεται ο αλγόριθμος MIN
                        Για 2 διαλέγεται ο αλγόριθμος MAX
                        Για 3 διαλέγεται ο αλγόριθμος SMART
                        Για 4 εμφανίζονται όλοι οι χρήστες που είναι αποθηκευμένοι στο φάκελο (λίστα players)
                        Για 5 εμφανίζονται όλα τα στοιχεία όλων των παιχνιδιών που έχουν παιχτεί
                            και είναι αποθηκευμένα στο φάκελο (λίστα stats)
                    Αν η απάντησή του είναι 3, τότε ξεκινά το παιχνίδι με τον υπολογιστή. Αρχικοποιείται το σακουλάκι
                    και δίνονται 7 γράμματα στον χρήστη και τον υπολογιστή, ενώ αρχικοποιούνται και άλλες μεταβλητές
                    όπως τα σκορ. Η συνθήκη εξόδου από το παιχνίδι είναι κάποια στιγμή ένας από τους δύο παίκτες να 
                    έχει αριθμό γραμμάτων διάφορο του 7 ή αν ο χρήστης πληκτρολογήσει τη λέξη 'q'. 
                    Αφού ο χρήστης πληκτρολογήσει μία έγκυρη λέξη ή 'p' ή 'q', το πρόγραμμα υπολογίζει την αξία της 
                    λέξης και ανάλογα με την λέξη του εμφανίζει κατάλληλο μήνυμα. Αν η λέξη δεν είναι 'q' τότε τα γράμματα
                    του χρήστη ενημερώνονται και σειρά να παίξει έχει ο υπολογιστής. Η διαδικασία επαναλαμβάνεται και
                    για τον υπολογιστή. Στο τέλος του παιχνιδιού εμφανίζονται τα αποτελέσματα του παιχνιδιού και προστίθενται
                    στη λίστα stats.
                    Αν η απάντησή του είναι 'q', τότε το πρόγραμμα βγαίνει από την επανάληψη. Πριν βγει καλεί την μέθοδο end()
                end(): αποθηκεύει τα στοιχεία των ενημερωμένων λίστων players και stats στους φακέλους 'names.pkl' και 'stats.pkl'
                    αντίστοιχα. Η λίστα players ενημερώνεται αυτόματα με το νέο σκορ και τις νίκες του χρήστη κατά την διάρκεια
                    των παιχνιδιών μιας που στο πεδίο ph αποθηκεύεται το αντίστοιχο στοιχείο της λίστας με αναφορά.
        
        Η κλάση InputOutput περιέχει όλες τις μεθόδους που εμφανίζουν μηνύματα στο χρήστη και λαμβάνουν απαντήσεις από αυτόν.
        Επιπλέον, περιλαμβάνει μεθόδους για αποθήκευση και ανάκτηση δεδομένων από αρχεία.
    
    '''
help(guidelines)
game = classes.Game()
game.run()

